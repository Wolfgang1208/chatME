{"ast":null,"code":"var _jsxFileName = \"/home/wolfgang/Desktop/chatME/src/components/Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { collection, query, where, getDocs, setDoc, doc, updateDoc, serverTimestamp, getDoc, arrayUnion, Timestamp } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { async } from '@firebase/util';\nimport { AuthContext } from \"../context/AuthContext\";\nimport { v4 as uuid } from \"uuid\";\nimport { ChatContext } from '../context/ChatContext';\n\n// process:\n// 1, handle search query db for username matching and display in search form\n// 2, handle click on search form to create chats between cur-user and disnaed-user (if uid? : ), setDoc updateDoc in firebase firestore\n// error catch: enabled\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n  const handleSearch = async () => {\n    // beware about the database table name:\n    const q = query(collection(db, \"users\"), where(\"displayName\", \"==\", username));\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        setUser(doc.data());\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n  const handleKey = e => {\n    e.code === \"Enter\" && handleSearch();\n  };\n  const handleSelect = async () => {\n    // check whether the group(chats(userA&userB) in firestore) exists, if not create\n    const combinedId = currentUser.uid > user.uid ? currentUser.uid + user.uid : user.uid + currentUser.uid;\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId));\n      if (!res.exists()) {\n        // create a chat in chats collection\n        await setDoc(doc(db, \"chats\", combinedId), {\n          messages: []\n        });\n        await setDoc(doc(db, \"chats\", data.chatId), {\n          messages: arrayUnion({\n            id: uuid(),\n            text: \"We are friends now, let's chat!\",\n            senderId: currentUser.uid,\n            date: Timestamp.now()\n          })\n        });\n        // create user chats\n        // userChats:{\n        //   testuser:{\n        //     combinedId:{\n        //       userInfo:{\n        //         displayname,img,id\n        //       },\n        //       lastMessage:\"\",\n        //       date:\n        //     }\n        //   }\n        // }\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL\n          },\n          // using firebase timestamp to omit timezone cal\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL\n          },\n          // using firebase timestamp to omit timezone cal\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n      }\n    } catch (err) {}\n    setUser(null);\n    setUsername(\"\");\n    // create user chats\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchFrom\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Find a friend\",\n        onKeyDown: handleKey,\n        onChange: e => setUsername(e.target.value),\n        value: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Sorry, couldnt find user \", username, \"...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      onClick: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInf\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"wzBpi38PuXC0iOvQCEGR2/C2GeY=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useContext","useState","collection","query","where","getDocs","setDoc","doc","updateDoc","serverTimestamp","getDoc","arrayUnion","Timestamp","db","async","AuthContext","v4","uuid","ChatContext","Search","username","setUsername","user","setUser","err","setErr","currentUser","data","handleSearch","q","querySnapshot","forEach","handleKey","e","code","handleSelect","combinedId","uid","res","exists","messages","chatId","id","text","senderId","date","now","displayName","photoURL","target","value"],"sources":["/home/wolfgang/Desktop/chatME/src/components/Search.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { collection, query, where, getDocs, setDoc, doc, updateDoc, serverTimestamp, getDoc, arrayUnion, Timestamp } from \"firebase/firestore\";\nimport { db } from \"../firebase\"\nimport { async } from '@firebase/util';\nimport { AuthContext } from \"../context/AuthContext\"\nimport { v4 as uuid } from \"uuid\";\nimport { ChatContext } from '../context/ChatContext';\n\n// process:\n// 1, handle search query db for username matching and display in search form\n// 2, handle click on search form to create chats between cur-user and disnaed-user (if uid? : ), setDoc updateDoc in firebase firestore\n// error catch: enabled\nconst Search = () => {\n  const [username, setUsername] = useState(\"\")\n  const [user, setUser] = useState(null)\n  const [err, setErr] = useState(false)\n  const { currentUser } = useContext(AuthContext)\n  const { data } = useContext(ChatContext)\n\n  const handleSearch = async () => {\n    // beware about the database table name:\n    const q = query(collection(db, \"users\"), where(\"displayName\", \"==\", username));\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach((doc) => {\n        setUser(doc.data());\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  const handleKey = (e) => {\n    e.code === \"Enter\" && handleSearch();\n  }\n\n  const handleSelect = async () => {\n    // check whether the group(chats(userA&userB) in firestore) exists, if not create\n    const combinedId = currentUser.uid > user.uid ? currentUser.uid + user.uid : user.uid + currentUser.uid;\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId));\n      if (!res.exists()) {\n        // create a chat in chats collection\n        await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\n        \n        await setDoc(doc(db, \"chats\", data.chatId), {\n          messages: arrayUnion({\n            id: uuid(),\n            text: \"We are friends now, let's chat!\",\n            senderId: currentUser.uid,\n            date: Timestamp.now()\n          })\n        });\n        // create user chats\n        // userChats:{\n        //   testuser:{\n        //     combinedId:{\n        //       userInfo:{\n        //         displayname,img,id\n        //       },\n        //       lastMessage:\"\",\n        //       date:\n        //     }\n        //   }\n        // }\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n          },\n          // using firebase timestamp to omit timezone cal\n          [combinedId + \".date\"]: serverTimestamp(),\n        });\n\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL,\n          },\n          // using firebase timestamp to omit timezone cal\n          [combinedId + \".date\"]: serverTimestamp(),\n        });\n      }\n    } catch (err) {\n\n    }\n    setUser(null);\n    setUsername(\"\");\n    // create user chats\n  };\n\n  return (\n    <div className=\"search\">\n      <div className='searchFrom'>\n        <input type=\"text\" placeholder='Find a friend' onKeyDown={handleKey} onChange={(e) => setUsername(e.target.value)} value={username} />\n      </div>\n      {err && <span>Sorry, couldnt find user {username}...</span>}\n      {user && (\n        <div className=\"userChat\" onClick={handleSelect}>\n          <img src={user.photoURL} alt=\"\" />\n          <div className=\"userChatInf\">\n            <span>{user.displayName}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Search"],"mappings":"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"},"metadata":{},"sourceType":"module"}