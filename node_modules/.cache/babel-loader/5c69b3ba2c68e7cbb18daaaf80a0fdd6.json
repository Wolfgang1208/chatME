{"ast":null,"code":"var _jsxFileName = \"/home/wolfgang/Desktop/chatME/src/components/Chats.jsx\",\n  _s = $RefreshSig$();\nimport { doc, onSnapshot } from 'firebase/firestore';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { db } from '../firebase';\n\n// fetch conversations\n// 1, realtime snapshot(db,table,curr-user.uid)=>doc.data()=>setChats()=>chats=doc.data() from firebase db \n// 2,\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = () => {\n  _s();\n  var _Object$entries;\n  const [chats, setChats] = useState([]);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  // at the beginning no userid -> error page empty -> getChats then setChats\n  useEffect(() => {\n    const getChats = () => {\n      const unsub = onSnapshot(doc(db, \"userChats\", currentUser.uid), doc => {\n        setChats(doc.data());\n      });\n      return () => {\n        unsub();\n      };\n    };\n    currentUser.uid && getChats();\n  }, [currentUser.uid]);\n\n  // console.log(Object.entries(chats));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats\",\n    children: (_Object$entries = Object.entries(chats)) === null || _Object$entries === void 0 ? void 0 : _Object$entries.map(chat => {\n      var _chat$1$lastMessage;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChat\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: chat[1].photoURL,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userChatInf\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: chat[1].displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_chat$1$lastMessage = chat[1].lastMessage) === null || _chat$1$lastMessage === void 0 ? void 0 : _chat$1$lastMessage.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, chat[0], true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Chats, \"eXxQig5BaCIGxU142nLW6IWOEjo=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["doc","onSnapshot","React","useContext","useEffect","useState","AuthContext","db","Chats","chats","setChats","currentUser","getChats","unsub","uid","data","Object","entries","map","chat","photoURL","displayName","lastMessage","text"],"sources":["/home/wolfgang/Desktop/chatME/src/components/Chats.jsx"],"sourcesContent":["import { doc, onSnapshot } from 'firebase/firestore';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../context/AuthContext';\nimport { db } from '../firebase';\n\n// fetch conversations\n// 1, realtime snapshot(db,table,curr-user.uid)=>doc.data()=>setChats()=>chats=doc.data() from firebase db \n// 2,\nconst Chats = () => {\n  const [chats, setChats] = useState([])\n  const { currentUser } = useContext(AuthContext)\n\n  // at the beginning no userid -> error page empty -> getChats then setChats\n  useEffect(() => {\n    const getChats = () => {\n      const unsub = onSnapshot(doc(db, \"userChats\", currentUser.uid), (doc) => {\n        setChats(doc.data())\n      });\n\n      return () => {\n        unsub();\n      }\n    }\n    currentUser.uid && getChats();\n  }, [currentUser.uid])\n\n  // console.log(Object.entries(chats));\n  return (\n    <div className='chats'>\n      {/* passing chats to objects here, ?.map((chat)=>) means for each chats*/}\n      {Object.entries(chats)?.map((chat) => (\n        <div className=\"userChat\" key={chat[0]}>\n          <img src={chat[1].photoURL} alt=\"\" />\n          <div className=\"userChatInf\">\n            <span>{chat[1].displayName}</span>\n            <p>{chat[1].lastMessage?.text}</p>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Chats"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AACpD,OAAOC,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,EAAE,QAAQ,aAAa;;AAEhC;AACA;AACA;AAAA;AACA,MAAMC,KAAK,GAAG,MAAM;EAAA;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEM;EAAY,CAAC,GAAGR,UAAU,CAACG,WAAW,CAAC;;EAE/C;EACAF,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GAAG,MAAM;MACrB,MAAMC,KAAK,GAAGZ,UAAU,CAACD,GAAG,CAACO,EAAE,EAAE,WAAW,EAAEI,WAAW,CAACG,GAAG,CAAC,EAAGd,GAAG,IAAK;QACvEU,QAAQ,CAACV,GAAG,CAACe,IAAI,EAAE,CAAC;MACtB,CAAC,CAAC;MAEF,OAAO,MAAM;QACXF,KAAK,EAAE;MACT,CAAC;IACH,CAAC;IACDF,WAAW,CAACG,GAAG,IAAIF,QAAQ,EAAE;EAC/B,CAAC,EAAE,CAACD,WAAW,CAACG,GAAG,CAAC,CAAC;;EAErB;EACA,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,6BAEnBE,MAAM,CAACC,OAAO,CAACR,KAAK,CAAC,oDAArB,gBAAuBS,GAAG,CAAEC,IAAI;MAAA;MAAA,oBAC/B;QAAK,SAAS,EAAC,UAAU;QAAA,wBACvB;UAAK,GAAG,EAAEA,IAAI,CAAC,CAAC,CAAC,CAACC,QAAS;UAAC,GAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,eACrC;UAAK,SAAS,EAAC,aAAa;UAAA,wBAC1B;YAAA,UAAOD,IAAI,CAAC,CAAC,CAAC,CAACE;UAAW;YAAA;YAAA;YAAA;UAAA,QAAQ,eAClC;YAAA,iCAAIF,IAAI,CAAC,CAAC,CAAC,CAACG,WAAW,wDAAnB,oBAAqBC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAC9B;MAAA,GALuBJ,IAAI,CAAC,CAAC,CAAC;QAAA;QAAA;QAAA;MAAA,QAMhC;IAAA,CACP;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,GAjCKX,KAAK;AAAA,KAALA,KAAK;AAmCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}