[{"/home/wolfgang/Desktop/chatME/src/index.js":"1","/home/wolfgang/Desktop/chatME/src/App.js":"2","/home/wolfgang/Desktop/chatME/src/pages/Register.jsx":"3","/home/wolfgang/Desktop/chatME/src/pages/Login.jsx":"4","/home/wolfgang/Desktop/chatME/src/pages/Home.jsx":"5","/home/wolfgang/Desktop/chatME/src/components/Sidebar.jsx":"6","/home/wolfgang/Desktop/chatME/src/components/Chat.jsx":"7","/home/wolfgang/Desktop/chatME/src/components/Navbar.jsx":"8","/home/wolfgang/Desktop/chatME/src/components/Search.jsx":"9","/home/wolfgang/Desktop/chatME/src/components/Chats.jsx":"10","/home/wolfgang/Desktop/chatME/src/components/Messages.jsx":"11","/home/wolfgang/Desktop/chatME/src/components/Message.jsx":"12","/home/wolfgang/Desktop/chatME/src/components/Input.jsx":"13","/home/wolfgang/Desktop/chatME/src/firebase.js":"14","/home/wolfgang/Desktop/chatME/src/context/AuthContext.js":"15","/home/wolfgang/Desktop/chatME/src/context/ChatContext.js":"16"},{"size":469,"mtime":1666814087614,"results":"17","hashOfConfig":"18"},{"size":976,"mtime":1666789847642,"results":"19","hashOfConfig":"18"},{"size":2553,"mtime":1666811540180,"results":"20","hashOfConfig":"18"},{"size":1182,"mtime":1666790872623,"results":"21","hashOfConfig":"18"},{"size":286,"mtime":1666705207042,"results":"22","hashOfConfig":"18"},{"size":277,"mtime":1666707557064,"results":"23","hashOfConfig":"18"},{"size":678,"mtime":1666814736160,"results":"24","hashOfConfig":"18"},{"size":565,"mtime":1666798828636,"results":"25","hashOfConfig":"18"},{"size":2917,"mtime":1666826753841,"results":"26","hashOfConfig":"18"},{"size":1721,"mtime":1666878114309,"results":"27","hashOfConfig":"18"},{"size":770,"mtime":1666828944035,"results":"28","hashOfConfig":"18"},{"size":915,"mtime":1666891570860,"results":"29","hashOfConfig":"18"},{"size":2576,"mtime":1666877828560,"results":"30","hashOfConfig":"18"},{"size":775,"mtime":1666772714850,"results":"31","hashOfConfig":"18"},{"size":660,"mtime":1666789823282,"results":"32","hashOfConfig":"18"},{"size":1156,"mtime":1666824670208,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"117ro3i",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"37"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/wolfgang/Desktop/chatME/src/index.js",[],[],[],"/home/wolfgang/Desktop/chatME/src/App.js",["88"],[],"import { Home } from \"./pages/Home\";\nimport { Login } from \"./pages/Login\";\nimport { Register } from \"./pages/Register\";\nimport \"./style.scss\"\nimport React, { useContext } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\nimport { AuthContext } from \"./context/AuthContext\";\n\n\nfunction App() {\n  const { currentUser } = useContext(AuthContext);\n\n  const ProtectedRoute = ({ children }) => {\n    if (!currentUser) {\n      return <Navigate to=\"/login\" />;\n    }\n    return children;\n  }\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\">\n          <Route index element={\n            <ProtectedRoute>\n              <Home />\n            </ProtectedRoute>\n          } />\n          <Route path=\"login\" element={<Login />} />\n          <Route path=\"register\" element={<Register />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/wolfgang/Desktop/chatME/src/pages/Register.jsx",["89","90"],[],"import React, { useState } from 'react'\nimport Add from \"../img/addAvatar.png\"\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth'\nimport { auth, db, storage } from '../firebase'\nimport { async } from '@firebase/util'\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, setDoc } from \"firebase/firestore\"; \nimport { useNavigate,Link } from 'react-router-dom'\n\nexport const Register = () => {\n  const [err, setErr] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const displayName = e.target[0].value;\n    const email = e.target[1].value;\n    const password = e.target[2].value;\n    const file = e.target[3].files[0];\n    // see screen shot-> if didnt initialise auth->400 bad request\n    try {\n      const res = await createUserWithEmailAndPassword(auth, email, password);\n\n      const storageRef = ref(storage, displayName);\n\n      const uploadTask = uploadBytesResumable(storageRef, file);\n\n      // Register three observers\n      uploadTask.on(\n        (error) => {\n          setErr(true)\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async(downloadURL) => {\n            await updateProfile(res.user,{\n              displayName,\n              photoURL: downloadURL,\n            });\n            await setDoc(doc(db,\"users\",res.user.uid),{\n              uid: res.user.uid,\n              displayName,\n              email,\n              photoURL: downloadURL\n            });\n            await setDoc(doc(db,\"userChats\",res.user.uid),{})\n            navigate(\"/\")\n\n          });\n        }\n      );\n\n      \n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  return (\n    <div className='formContainer'>\n      <div className='formWrapper'>\n        <span className='logo'>chatME</span>\n        <span className='title'>Register here</span>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder='display name' />\n          <input type=\"email\" placeholder='email' />\n          <input type=\"password\" placeholder='password' />\n          <input style={{ display: \"none\" }} type=\"file\" name=\"\" id=\"file\" />\n          <label htmlFor=\"file\">\n            <img src={Add} alt=\"avatar\" />\n            <span>Add an avatar</span>\n          </label>\n          <button>Sign up</button>\n          {err && <span>Something went wrong...</span>}\n        </form>\n        <p>You do have an account? <Link to=\"/login\">Login</Link>  </p>\n      </div>\n    </div>\n  )\n}\n","/home/wolfgang/Desktop/chatME/src/pages/Login.jsx",[],[],"/home/wolfgang/Desktop/chatME/src/pages/Home.jsx",[],[],"/home/wolfgang/Desktop/chatME/src/components/Sidebar.jsx",[],[],"/home/wolfgang/Desktop/chatME/src/components/Chat.jsx",[],[],"/home/wolfgang/Desktop/chatME/src/components/Navbar.jsx",[],[],"/home/wolfgang/Desktop/chatME/src/components/Search.jsx",["91"],[],"import React, { useContext, useState } from 'react'\nimport { collection, query, where, getDocs, setDoc, doc, updateDoc, serverTimestamp, getDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\"\nimport { async } from '@firebase/util';\nimport { AuthContext } from \"../context/AuthContext\"\n\n// process:\n// 1, handle search query db for username matching and display in search form\n// 2, handle click on search form to create chats between cur-user and disnaed-user (if uid? : ), setDoc updateDoc in firebase firestore\n// error catch: enabled\nconst Search = () => {\n  const [username, setUsername] = useState(\"\")\n  const [user, setUser] = useState(null)\n  const [err, setErr] = useState(false)\n  const { currentUser } = useContext(AuthContext)\n\n  const handleSearch = async () => {\n    // beware about the database table name:\n    const q = query(collection(db, \"users\"), where(\"displayName\", \"==\", username));\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach((doc) => {\n        setUser(doc.data());\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  const handleKey = (e) => {\n    e.code === \"Enter\" && handleSearch();\n  }\n\n  const handleSelect = async () => {\n    //check whether the group(chats in firestore) exists, if not create\n    const combinedId =\n      currentUser.uid > user.uid\n        ? currentUser.uid + user.uid\n        : user.uid + currentUser.uid;\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId));\n\n      if (!res.exists()) {\n        //create a chat in chats collection\n        await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\n\n        //create user chats\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n          },\n          [combinedId + \".date\"]: serverTimestamp(),\n        });\n\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL,\n          },\n          [combinedId + \".date\"]: serverTimestamp(),\n        });\n      }\n    } catch (err) { }\n\n    setUser(null);\n    setUsername(\"\")\n  };\n\n  return (\n    <div className=\"search\">\n      <div className='searchFrom'>\n        <input type=\"text\" placeholder='Find a friend' onKeyDown={handleKey} onChange={(e) => setUsername(e.target.value)} value={username} />\n      </div>\n      {err && <span>Sorry, couldnt find user {username}...</span>}\n      {user && (\n        <div className=\"userChat\" onClick={handleSelect}>\n          <img src={user.photoURL} alt=\"\" />\n          <div className=\"userChatInf\">\n            <span>{user.displayName}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Search","/home/wolfgang/Desktop/chatME/src/components/Chats.jsx",[],[],"/home/wolfgang/Desktop/chatME/src/components/Messages.jsx",[],[],"/home/wolfgang/Desktop/chatME/src/components/Message.jsx",[],[],"/home/wolfgang/Desktop/chatME/src/components/Input.jsx",["92"],[],"import React, { useContext, useState } from 'react'\nimport Img from '../img/img.png'\nimport Attach from '../img/attach.png'\nimport { async } from '@firebase/util';\nimport { arrayUnion, doc, serverTimestamp, Timestamp, updateDoc } from 'firebase/firestore';\nimport { v4 as uuid } from \"uuid\";\nimport { db, storage } from '../firebase';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\n\nconst Input = () => {\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n\n  const { currentUser } = useContext(AuthContext)\n  const { data } = useContext(ChatContext)\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n\n      const uploadTask = uploadBytesResumable(storageRef, img);\n\n      uploadTask.on(\n        (error) => {\n          // setErr(true)\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n            await updateDoc(doc(db, \"chats\", data.chatId), {\n              messages: arrayUnion({\n                id: uuid(),\n                text,\n                senderId: currentUser.uid,\n                date: Timestamp.now(),\n                img: downloadURL\n              })\n            });\n          });\n        }\n      );\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n    // for current user\n    await updateDoc(doc(db,\"userChats\",currentUser.uid),{\n      [data.chatId+\".lastMessage\"]:{\n        text\n      },\n      [data.chatId+\".date\"]:serverTimestamp(),\n    })\n    // for chating user\n    await updateDoc(doc(db,\"userChats\",data.user.uid),{\n      [data.chatId+\".lastMessage\"]:{\n        text\n      },\n      [data.chatId+\".date\"]:serverTimestamp(),\n    })\n\n    setText(\"\")\n    setImg(null)\n  };\n\n  return (\n    <div className='input'>\n      <input type=\"text\" name=\"\" id=\"\" placeholder='Type somthing here...' onChange={e => setText(e.target.value)} value={text}/>\n      <div className=\"send\">\n        <img src={Attach} alt=\"\" />\n        <input type=\"file\" style={{ display: \"none\" }} id=\"file\" onChange={e => setImg(e.target.files[0])} />\n        <label htmlFor='file'>\n          <img src={Img} alt=\"\" />\n        </label>\n        <button onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Input","/home/wolfgang/Desktop/chatME/src/firebase.js",["93","94"],[],"import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth } from \"firebase/auth\";\nimport { getStorage, ref } from \"firebase/storage\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDRab0d7U8sIaOOGp9-BOKC6eKe04Ok0Do\",\n  authDomain: \"demo1-b32d2.firebaseapp.com\",\n  projectId: \"demo1-b32d2\",\n  storageBucket: \"demo1-b32d2.appspot.com\",\n  messagingSenderId: \"285532714466\",\n  appId: \"1:285532714466:web:b602c7ce380739cecf35bb\",\n  measurementId: \"G-XMZQJWEPXY\"\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const storage = getStorage();\nexport const db = getFirestore();\nconst analytics = getAnalytics(app);","/home/wolfgang/Desktop/chatME/src/context/AuthContext.js",[],[],"/home/wolfgang/Desktop/chatME/src/context/ChatContext.js",[],[],{"ruleId":"95","severity":1,"message":"96","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":20},{"ruleId":"95","severity":1,"message":"99","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":15},{"ruleId":"95","severity":1,"message":"100","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":20},{"ruleId":"95","severity":1,"message":"99","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":15},{"ruleId":"95","severity":1,"message":"99","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":15},{"ruleId":"95","severity":1,"message":"101","line":4,"column":22,"nodeType":"97","messageId":"98","endLine":4,"endColumn":25},{"ruleId":"95","severity":1,"message":"102","line":22,"column":7,"nodeType":"97","messageId":"98","endLine":22,"endColumn":16},"no-unused-vars","'createRoot' is defined but never used.","Identifier","unusedVar","'async' is defined but never used.","'getStorage' is defined but never used.","'ref' is defined but never used.","'analytics' is assigned a value but never used."]